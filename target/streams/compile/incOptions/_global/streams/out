[0m[[0m[0mdebug[0m] [0m[0mCreated transactional ClassFileManager with tempDir = C:\Users\Mora\IdeaProjects\474_HW1_SBT\target\scala-3.1.0\classes.bak[0m
[0m[[0m[0mdebug[0m] [0m[0mAbout to delete class files:[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Value$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Union$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Scope.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Intersection$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$SymmetricDifference.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$package.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Variable.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$package$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Assign$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Intersection.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Macro$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Union.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Cartesian$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Check.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Delete.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Assign.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Scope$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$NoneCase.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Check$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$SymmetricDifference$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Variable$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$SetDifference.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Macro.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Delete$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$NoneCase$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$SetDifference$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Cartesian.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Value.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	runSetExp.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Value$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Union$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Scope.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Intersection$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$SymmetricDifference.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$package.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Variable.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$package$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Assign$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Intersection.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Macro$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Union.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Cartesian$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Check.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Delete.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Assign.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Scope$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$NoneCase.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Check$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$SymmetricDifference$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Variable$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$SetDifference.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Macro.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Delete$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$NoneCase$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$SetDifference$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Cartesian.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Value.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	runSetExp.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0mWe backup class files:[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Value$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Union$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Scope.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Intersection$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$SymmetricDifference.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$package.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Variable.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$package$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Assign$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Intersection.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Macro$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Union.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Cartesian$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Check.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Delete.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Assign.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Scope$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$NoneCase.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Check$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$SymmetricDifference$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Variable$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$SetDifference.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Macro.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Delete$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$NoneCase$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$SetDifference$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Cartesian.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Value.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	runSetExp.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Value$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Union$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Scope.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Intersection$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$SymmetricDifference.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$package.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Variable.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$package$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Assign$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Intersection.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Macro$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Union.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Cartesian$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Check.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Delete.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Assign.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Scope$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$NoneCase.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Check$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$SymmetricDifference$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Variable$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$SetDifference.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Macro.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Delete$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$NoneCase$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$SetDifference$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Cartesian.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Value.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	runSetExp.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0mRegistering generated classes:[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Value$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Union$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Scope.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Intersection$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$SymmetricDifference.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$package.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Variable.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$package$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Assign$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Intersection.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Macro$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Union.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Cartesian$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Check.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Delete.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Assign.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Scope$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$NoneCase.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Check$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$SymmetricDifference$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Variable$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$SetDifference.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Macro.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Delete$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$NoneCase$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$SetDifference$.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Cartesian.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Value.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	runSetExp.class[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Value$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Union$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Scope.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Intersection$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$SymmetricDifference.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$package.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Variable.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$package$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Assign$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Intersection.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Macro$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Union.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Cartesian$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Check.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Delete.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Assign.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Scope$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$NoneCase.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Check$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$SymmetricDifference$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Variable$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$SetDifference.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Macro.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Delete$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$NoneCase$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$SetDifference$.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Cartesian.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	SetTheoryDSL$SetExp$Value.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0m	runSetExp.tasty[0m
[0m[[0m[0mdebug[0m] [0m[0mRemoving the temporary directory used for backing up class files: C:\Users\Mora\IdeaProjects\474_HW1_SBT\target\scala-3.1.0\classes.bak[0m
